syntax = "proto3";
package protocol;

// Material needed for a private key owner to perform a ECDH key exchange
message ECDHKeyBundle {
    // Key that takes the role of ephemeral public key.
    bytes public_ephemeral_key = 1; 
    // Key that indicates what identity should be used for the key exchange
    bytes public_identity_key = 2; 
}

// Material needed for a private key owner to perform a key exchange.
message X3DHKeyBundle {
    // What method is used to perform a key exchange
    KeyExchangeMethod key_exchange_method = 1;
    // Key that takes the role of identity key for X3DH or key used in ECDH.
    bytes public_identity_key = 2; 
}

// Available key exchange methonds
enum KeyExchangeMethod {    
    Unknown = 0; // No key exchange method supplied
    ECDH = 1; 
    X3DH = 2;
}

/**
 * Envelope contains the information need for the recipient to retrieve and decrypt the message contents.
 * When sending group messages one envelope is created per recipient.
 *
 */
message Envelope {
    /**
     * Message key is the encryption key to decrypt the message location and contents.
     * Encrypted message key contains the message key which can be decrypted after a successful key exchange.
     */
    bytes encrypted_message_key = 1;
    /**
     * Message URI is the location of the encrypted contents.
     * Encrypted message URI contains the location which can be decrypted after a successful key exchange.
     */
    bytes encrypted_message_uri = 2;

    // What method is used to perform a key exchange
    KeyExchangeMethod key_exchange_method = 3;

    // top level not encrypted
    ECDHKeyBundle ecdh_key_bundle = 4;    
}


/**
 * Information stored on the Mailchain protocol informing a delivery.
 */
message Delivery {
    Envelope envelope = 1;
    /**
     * Public key associated with the delivery address. When sending a message to an address
     * it must first be resolved to retrieve the public key.
     *
     * note multiple addresses may resolve
     * to the same public key.
     *
     */
    bytes destination_identity = 2;
};
